# Serverless Framework configuration for AWS Academy Lab
service: quizmaster-backend-lab

provider:
  name: aws
  runtime: nodejs18.x
  region: us-east-1
  stage: ${opt:stage, 'lab'}
  
  # Use existing lab role - no custom IAM roles
  # deploymentBucket: # Let serverless create default bucket
  
  environment:
    NODE_ENV: production
    COGNITO_POOL_ID: us-east-1_RsOYVRSJu
    COGNITO_CLIENT_ID: 6npa9g9it0o66diikabm29j9je
    COGNITO_REGION: us-east-1
    COGNITO_DOMAIN: medhya.auth.us-east-1.amazoncognito.com
    DYNAMODB_TABLE: QuizMasterTable
    AWS_REGION: ${self:provider.region}
  
  # IAM permissions for DynamoDB (if lab allows)
  iamRoleStatements:
    - Effect: Allow
      Action:
        - dynamodb:Query
        - dynamodb:Scan
        - dynamodb:GetItem
        - dynamodb:PutItem
        - dynamodb:UpdateItem
        - dynamodb:DeleteItem
      Resource:
        - "arn:aws:dynamodb:${self:provider.region}:*:table/QuizMasterTable"
        - "arn:aws:dynamodb:${self:provider.region}:*:table/QuizMasterTable/index/*"

functions:
  api:
    handler: src/lambda.handler
    events:
      - http:
          path: /{proxy+}
          method: ANY
          cors:
            origin: 
              - https://main.*.amplifyapp.com
              - https://*.amplifyapp.com
            headers:
              - Content-Type
              - X-Amz-Date
              - Authorization
              - X-Api-Key
              - X-Amz-Security-Token
              - X-Amz-User-Agent
            allowCredentials: true
      - http:
          path: /
          method: ANY
          cors:
            origin: 
              - https://main.*.amplifyapp.com
              - https://*.amplifyapp.com
            headers:
              - Content-Type
              - X-Amz-Date
              - Authorization
              - X-Api-Key
              - X-Amz-Security-Token
              - X-Amz-User-Agent
            allowCredentials: true

# No DynamoDB resources for lab - using mock database

plugins:
  - serverless-offline

custom:
  serverless-offline:
    httpPort: 5000